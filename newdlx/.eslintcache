[{"D:\\Cuna\\newdlx\\src\\index.tsx":"1","D:\\Cuna\\newdlx\\src\\components\\ReportComponent.tsx":"2"},{"size":528,"mtime":1612793985840,"results":"3","hashOfConfig":"4"},{"size":4749,"mtime":1613017823588,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14u7a0v",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Cuna\\newdlx\\src\\index.tsx",[],"D:\\Cuna\\newdlx\\src\\components\\ReportComponent.tsx",["10"],{"ruleId":"11","severity":1,"message":"12","line":116,"column":61,"nodeType":"13","messageId":"14","endLine":116,"endColumn":64,"suggestions":"15"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["16","17"],{"messageId":"18","fix":"19","desc":"20"},{"messageId":"21","fix":"22","desc":"23"},"suggestUnknown",{"range":"24","text":"25"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"24","text":"26"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[4492,4495],"unknown","never"]